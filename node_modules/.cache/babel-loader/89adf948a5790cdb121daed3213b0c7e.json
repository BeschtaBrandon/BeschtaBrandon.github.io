{"ast":null,"code":"import _classCallCheck from \"/Users/brandonbeschta/workspace/arcane-headland-80607/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brandonbeschta/workspace/arcane-headland-80607/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brandonbeschta/workspace/arcane-headland-80607/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brandonbeschta/workspace/arcane-headland-80607/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brandonbeschta/workspace/arcane-headland-80607/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/brandonbeschta/workspace/arcane-headland-80607/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/brandonbeschta/workspace/arcane-headland-80607/src/components/Weather/Weather.js\";\nimport React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport moment from \"moment\";\nimport \"./Weather.scss\";\nvar DATE_FORMAT = \"MMMM Do YYYY\";\n\nvar Weather = /*#__PURE__*/function (_Component) {\n  _inherits(Weather, _Component);\n\n  function Weather(props) {\n    var _this;\n\n    _classCallCheck(this, Weather);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Weather).call(this, props));\n\n    _this.renderWeatherHeader = function () {\n      return /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"mt-5 mb-4\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }\n      }, \"Weather \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-thermometer-half\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    _this.filterWeatherData = function (data) {\n      var filteredData;\n      filteredData = data.filter(function (item, index) {\n        if (!index) {\n          return true;\n        }\n\n        var prevDate = moment(data[index - 1].dt_txt).format(\"YYYY-MM-DD\");\n        var isSameDate = moment(item.dt_txt).format(\"YYYY-MM-DD\") === prevDate;\n        return !isSameDate;\n      });\n      return filteredData;\n    };\n\n    _this.getIcons = function (data) {\n      var icons = [];\n      var sun = /*#__PURE__*/React.createElement(\"i\", {\n        className: \"text-warning fas fa-sun\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      });\n      var snow = /*#__PURE__*/React.createElement(\"i\", {\n        className: \"text-muted fas fa-snowflake\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 18\n        }\n      });\n      var clouds = /*#__PURE__*/React.createElement(\"i\", {\n        className: \"text-muted fas fa-cloud-sun\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 20\n        }\n      });\n      var rain = /*#__PURE__*/React.createElement(\"i\", {\n        className: \"text-muted fas fa-cloud-rain\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 18\n        }\n      });\n\n      for (var i = 0; i < data.length; i++) {\n        var mainWeather = data[i].weather[0].main.toLowerCase() || \"\";\n        var weatherDescription = data[i].weather[0].description.toLowerCase() || \"\";\n\n        if (mainWeather.includes(\"snow\")) {\n          icons.push(snow);\n        } else if (mainWeather.includes(\"cloud\") || weatherDescription.includes(\"cloud\") && (!weatherDescription.includes(\"clear\") || !weatherDescription.includes(\"sky\"))) {\n          icons.push(clouds);\n        } else if (mainWeather.includes(\"clear\")) {\n          icons.push(sun);\n        } else if (mainWeather.includes(\"rain\")) {\n          icons.push(rain);\n        } else {\n          icons.push(clouds);\n        }\n      }\n\n      return icons;\n    };\n\n    _this.convertToFahrenheit = function (degrees) {\n      if (degrees === null || degrees === undefined) return;\n      return parseInt((degrees - 273.15) * 9 / 5 + 32);\n    };\n\n    _this.renderWIWeatherContent = function () {\n      var _this$state = _this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          list = _this$state.list,\n          city = _this$state.city;\n\n      var filteredData = _this.filterWeatherData(list).slice(0, 5);\n\n      var weatherIcons = _this.getIcons(filteredData);\n\n      if (error) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 14\n          }\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 14\n          }\n        }, \"Loading...\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          className: \"text-danger\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }\n        }, city.name ? city.name : \"Madison\", \", Wisconsin\")), /*#__PURE__*/React.createElement(Container, {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }\n        }, filteredData.map(function (item, i) {\n          return /*#__PURE__*/React.createElement(Col, {\n            key: i,\n            xs: 12,\n            md: 2,\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \"lead\",\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }\n          }, _this.convertToFahrenheit(item.main.temp), \"\\xB0F\"), weatherIcons[i], \" \", item.weather[0].main, /*#__PURE__*/React.createElement(\"p\", {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 21\n            }\n          }, moment(item.dt_txt).format(DATE_FORMAT))));\n        }))));\n      }\n    };\n\n    _this.renderCAWeatherContent = function () {\n      var _this$state2 = _this.state,\n          error = _this$state2.error,\n          otherList = _this$state2.otherList;\n\n      var filteredData = _this.filterWeatherData(otherList).slice(0, 5);\n\n      var weatherIcons = _this.getIcons(filteredData);\n\n      if (error) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 14\n          }\n        }, \"Error: \", error.message);\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"mt-4\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          className: \"text-success\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }\n        }, \"San Francisco, California\")), /*#__PURE__*/React.createElement(Container, {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }\n        }, filteredData.map(function (item, i) {\n          return /*#__PURE__*/React.createElement(Col, {\n            key: i,\n            xs: 12,\n            md: 2,\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \"lead\",\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 21\n            }\n          }, _this.convertToFahrenheit(item.main.temp), \"\\xB0F\"), weatherIcons[i], \" \", item.weather[0].main, /*#__PURE__*/React.createElement(\"p\", {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 21\n            }\n          }, moment(item.dt_txt).format(DATE_FORMAT))));\n        }))));\n      }\n    };\n\n    _this.renderFLWeatherContent = function () {\n      var _this$state3 = _this.state,\n          error = _this$state3.error,\n          miamiList = _this$state3.miamiList;\n\n      var filteredData = _this.filterWeatherData(miamiList).slice(0, 5);\n\n      var weatherIcons = _this.getIcons(filteredData);\n\n      if (error) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 14\n          }\n        }, \"Error: \", error.message);\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"mt-4\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          className: \"text-warning\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }\n        }, \"Miami, Florida\")), /*#__PURE__*/React.createElement(Container, {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }\n        }, filteredData.map(function (item, i) {\n          return /*#__PURE__*/React.createElement(Col, {\n            key: i,\n            xs: 12,\n            md: 2,\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \"lead\",\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 21\n            }\n          }, _this.convertToFahrenheit(item.main.temp), \"\\xB0F\"), weatherIcons[i], \" \", item.weather[0].main, /*#__PURE__*/React.createElement(\"p\", {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 21\n            }\n          }, moment(item.dt_txt).format(DATE_FORMAT))));\n        }))));\n      }\n    };\n\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      list: [],\n      otherList: [],\n      miamiList: [],\n      city: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Weather, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://api.openweathermap.org/data/2.5/forecast?zip=53715&APPID=29058f38b91822420846508014b42fc0\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          list: result.list,\n          city: result.city\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n      fetch(\"https://api.openweathermap.org/data/2.5/forecast?zip=94112&APPID=29058f38b91822420846508014b42fc0\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          otherList: result.list\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n      fetch(\"https://api.openweathermap.org/data/2.5/forecast?zip=33101&APPID=29058f38b91822420846508014b42fc0\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          miamiList: result.list\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bg-light mt-2 pb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 7\n        }\n      }, this.renderWeatherHeader(), this.renderWIWeatherContent(), this.renderCAWeatherContent(), this.renderFLWeatherContent());\n    }\n  }]);\n\n  return Weather;\n}(Component);\n\nexport default Weather;","map":{"version":3,"sources":["/Users/brandonbeschta/workspace/arcane-headland-80607/src/components/Weather/Weather.js"],"names":["React","Component","Container","Row","Col","moment","DATE_FORMAT","Weather","props","renderWeatherHeader","filterWeatherData","data","filteredData","filter","item","index","prevDate","dt_txt","format","isSameDate","getIcons","icons","sun","snow","clouds","rain","i","length","mainWeather","weather","main","toLowerCase","weatherDescription","description","includes","push","convertToFahrenheit","degrees","undefined","parseInt","renderWIWeatherContent","state","error","isLoaded","list","city","slice","weatherIcons","message","name","map","temp","renderCAWeatherContent","otherList","renderFLWeatherContent","miamiList","fetch","then","res","json","result","setState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport moment from \"moment\";\n\nimport \"./Weather.scss\";\n\nconst DATE_FORMAT = \"MMMM Do YYYY\";\n\nclass Weather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      list: [],\n      otherList: [],\n      miamiList: [],\n      city: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\n      \"https://api.openweathermap.org/data/2.5/forecast?zip=53715&APPID=29058f38b91822420846508014b42fc0\"\n    )\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            list: result.list,\n            city: result.city\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      );\n\n    fetch(\n      \"https://api.openweathermap.org/data/2.5/forecast?zip=94112&APPID=29058f38b91822420846508014b42fc0\"\n    )\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            otherList: result.list\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      );\n\n    fetch(\n      \"https://api.openweathermap.org/data/2.5/forecast?zip=33101&APPID=29058f38b91822420846508014b42fc0\"\n    )\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            miamiList: result.list\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      );\n  }\n\n  renderWeatherHeader = () => {\n    return (\n      <h2 className=\"mt-5 mb-4\">\n        Weather <i className=\"fas fa-thermometer-half\" />\n      </h2>\n    );\n  };\n\n  filterWeatherData = data => {\n    let filteredData;\n    filteredData = data.filter((item, index) => {\n      if (!index) {\n        return true;\n      }\n      let prevDate = moment(data[index - 1].dt_txt).format(\"YYYY-MM-DD\");\n      let isSameDate = moment(item.dt_txt).format(\"YYYY-MM-DD\") === prevDate;\n      return !isSameDate;\n    });\n    return filteredData;\n  };\n\n  getIcons = data => {\n    var icons = [];\n    const sun = <i className=\"text-warning fas fa-sun\" />;\n    const snow = <i className=\"text-muted fas fa-snowflake\" />;\n    const clouds = <i className=\"text-muted fas fa-cloud-sun\" />;\n    const rain = <i className=\"text-muted fas fa-cloud-rain\" />;\n    for (let i = 0; i < data.length; i++) {\n      let mainWeather = data[i].weather[0].main.toLowerCase() || \"\";\n      let weatherDescription =\n        data[i].weather[0].description.toLowerCase() || \"\";\n      if (mainWeather.includes(\"snow\")) {\n        icons.push(snow);\n      } else if (\n        mainWeather.includes(\"cloud\") ||\n        (weatherDescription.includes(\"cloud\") &&\n          (!weatherDescription.includes(\"clear\") ||\n            !weatherDescription.includes(\"sky\")))\n      ) {\n        icons.push(clouds);\n      } else if (mainWeather.includes(\"clear\")) {\n        icons.push(sun);\n      } else if (mainWeather.includes(\"rain\")) {\n        icons.push(rain);\n      } else {\n        icons.push(clouds);\n      }\n    }\n    return icons;\n  };\n\n  convertToFahrenheit = degrees => {\n    if (degrees === null || degrees === undefined) return;\n    return parseInt(((degrees - 273.15) * 9) / 5 + 32);\n  };\n\n  renderWIWeatherContent = () => {\n    const { error, isLoaded, list, city } = this.state;\n    const filteredData = this.filterWeatherData(list).slice(0, 5);\n    const weatherIcons = this.getIcons(filteredData);\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div>\n          <h3>\n            <small className=\"text-danger\">\n              {city.name ? city.name : \"Madison\"}, Wisconsin\n            </small>\n          </h3>\n          <Container>\n            <Row>\n              {filteredData.map((item, i) => (\n                <Col key={i} xs={12} md={2}>\n                  <div>\n                    <p className=\"lead\">\n                      {this.convertToFahrenheit(item.main.temp)}\n                      &#176;F\n                    </p>\n                    {weatherIcons[i]} {item.weather[0].main}\n                    <p>{moment(item.dt_txt).format(DATE_FORMAT)}</p>\n                  </div>\n                </Col>\n              ))}\n            </Row>\n          </Container>\n        </div>\n      );\n    }\n  };\n\n  renderCAWeatherContent = () => {\n    const { error, otherList } = this.state;\n    const filteredData = this.filterWeatherData(otherList).slice(0, 5);\n    const weatherIcons = this.getIcons(filteredData);\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else {\n      return (\n        <div className=\"mt-4\">\n          <h3>\n            <small className=\"text-success\">San Francisco, California</small>\n          </h3>\n          <Container>\n            <Row>\n              {filteredData.map((item, i) => (\n                <Col key={i} xs={12} md={2}>\n                  <div>\n                    <p className=\"lead\">\n                      {this.convertToFahrenheit(item.main.temp)}\n                      &#176;F\n                    </p>\n                    {weatherIcons[i]} {item.weather[0].main}\n                    <p>{moment(item.dt_txt).format(DATE_FORMAT)}</p>\n                  </div>\n                </Col>\n              ))}\n            </Row>\n          </Container>\n        </div>\n      );\n    }\n  };\n\n  renderFLWeatherContent = () => {\n    const { error, miamiList } = this.state;\n    const filteredData = this.filterWeatherData(miamiList).slice(0, 5);\n    const weatherIcons = this.getIcons(filteredData);\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else {\n      return (\n        <div className=\"mt-4\">\n          <h3>\n            <small className=\"text-warning\">Miami, Florida</small>\n          </h3>\n          <Container>\n            <Row>\n              {filteredData.map((item, i) => (\n                <Col key={i} xs={12} md={2}>\n                  <div>\n                    <p className=\"lead\">\n                      {this.convertToFahrenheit(item.main.temp)}\n                      &#176;F\n                    </p>\n                    {weatherIcons[i]} {item.weather[0].main}\n                    <p>{moment(item.dt_txt).format(DATE_FORMAT)}</p>\n                  </div>\n                </Col>\n              ))}\n            </Row>\n          </Container>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"bg-light mt-2 pb-3\">\n        {this.renderWeatherHeader()}\n        {this.renderWIWeatherContent()}\n        {this.renderCAWeatherContent()}\n        {this.renderFLWeatherContent()}\n      </div>\n    );\n  }\n}\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}