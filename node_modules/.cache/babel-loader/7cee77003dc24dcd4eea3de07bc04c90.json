{"ast":null,"code":"import _slicedToArray from \"/Users/brandonbeschta/workspace/arcane-headland-80607/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/brandonbeschta/workspace/arcane-headland-80607/src/components/Contact/Contact.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Breadcrumb } from \"react-bootstrap\";\nimport \"./Contact.scss\";\n\nvar Contact = function Contact() {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      catImageInfo = _useState2[0],\n      setCatInfo = _useState2[1];\n\n  var fetchCatImage = function fetchCatImage() {\n    return fetch(\"https://api.thecatapi.com/v1/images/search?size=full\", {\n      method: \"GET\",\n      mode: \"cors\"\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setCatInfo(json);\n    }).catch(function (error) {\n      return console.error(\"error:\", error);\n    });\n  };\n\n  useEffect(function () {\n    if (!catImageInfo.length) {\n      fetchCatImage();\n    }\n  }, [catImageInfo]);\n\n  var renderCatImage = function renderCatImage() {\n    var firstResult = catImageInfo.length && catImageInfo[0];\n\n    if (firstResult) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: firstResult.url,\n        className: \"img-responsive\",\n        alt: \"Kitty\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }));\n    }\n  };\n\n  var renderContactHeader = function renderContactHeader() {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"mt-2 mb-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, t(\"contact\"), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-envelope ml-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderContactContent = function renderContactContent() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, t(\"feel-free\")), /*#__PURE__*/React.createElement(Breadcrumb, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n      href: \"mailto:beschtabra2@gmail.com\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, t(\"email\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n      href: \"https://www.linkedin.com/in/brandonbeschta/\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, t(\"linkedIn\"))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contacts-page\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, renderCatImage(), renderContactHeader(), renderContactContent());\n};\n\nexport default Contact;","map":{"version":3,"sources":["/Users/brandonbeschta/workspace/arcane-headland-80607/src/components/Contact/Contact.js"],"names":["React","useEffect","useState","useTranslation","Breadcrumb","Contact","t","catImageInfo","setCatInfo","fetchCatImage","fetch","method","mode","then","response","json","catch","error","console","length","renderCatImage","firstResult","url","renderContactHeader","renderContactContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Breadcrumb } from \"react-bootstrap\";\n\nimport \"./Contact.scss\";\n\nconst Contact = () => {\n  const { t } = useTranslation();\n  const [catImageInfo, setCatInfo] = useState([]);\n  const fetchCatImage = () => {\n    return fetch(\"https://api.thecatapi.com/v1/images/search?size=full\", {\n      method: \"GET\",\n      mode: \"cors\"\n    })\n      .then(response => response.json())\n      .then(json => setCatInfo(json))\n      .catch(error => console.error(\"error:\", error));\n  };\n\n  useEffect(() => {\n    if (!catImageInfo.length) {\n      fetchCatImage();\n    }\n  }, [catImageInfo]);\n\n  const renderCatImage = () => {\n    const firstResult = catImageInfo.length && catImageInfo[0];\n    if (firstResult) {\n      return (\n        <div className=\"row\">\n          <img src={firstResult.url} className=\"img-responsive\" alt=\"Kitty\" />\n          {/*<button onClick={refreshImage()} className='btn btn-default'>\n            <i className='fas fa-redo' />\n          </button>*/}\n        </div>\n      );\n    }\n  };\n\n  const renderContactHeader = () => {\n    return (\n      <h2 className=\"mt-2 mb-2\">\n        {t(\"contact\")}\n        <i className=\"fas fa-envelope ml-2\" />\n      </h2>\n    );\n  };\n\n  const renderContactContent = () => {\n    return (\n      <>\n        <p className=\"lead\">{t(\"feel-free\")}</p>\n        <Breadcrumb>\n          <Breadcrumb.Item href=\"mailto:beschtabra2@gmail.com\">\n            {t(\"email\")}\n          </Breadcrumb.Item>\n          <Breadcrumb.Item href=\"https://www.linkedin.com/in/brandonbeschta/\">\n            {t(\"linkedIn\")}\n          </Breadcrumb.Item>\n        </Breadcrumb>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"contacts-page\">\n      {renderCatImage()}\n      {renderContactHeader()}\n      {renderContactContent()}\n    </div>\n  );\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}